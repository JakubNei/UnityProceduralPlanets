#pragma kernel main

#include "Planet.Compute.cginc"



Texture2D<float> _chunkHeightMap;
SamplerState sampler_chunkHeightMap;

Texture2D<float2> _chunkSlopeAndCurvatureMap;
SamplerState sampler_chunkSlopeAndCurvatureMap;

float3 _rangeUnitCubePosA;
float3 _rangeUnitCubePosB;
float3 _rangeUnitCubePosC;
float3 _rangeUnitCubePosD;

float _heightMin;
float _heightMax;




RWTexture2D<float> _chunkHeightMapNew;




[numthreads(16, 16, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
	float2 uv = getUv(_chunkHeightMapNew, id.xy);

	float3 unitCubePos = lerp(
		lerp(_rangeUnitCubePosA, _rangeUnitCubePosB, uv.x),
		lerp(_rangeUnitCubePosD, _rangeUnitCubePosC, uv.x),
		uv.y
	);

	float3 dir = unitCubeToUnitSphere(unitCubePos);

	float height = _chunkHeightMap[id.xy];
	//float height = clamp(s0, 0, 1);

	float2 slopeXY = _chunkSlopeAndCurvatureMap[id.xy].xy;
	float slope = saturate(length(slopeXY));


	float r = _heightMax - _heightMin;
	//slope = clamp(slope, 0, 1);

	float rockWeight = smoothstep(0.25, 1, slope);
	height += (1 - abs(snoise(dir * 100, 30, 1.5))) * rockWeight * 0.05;
	
	//DEBUG
	//if(slope > 0.01) height += slope;
	//height += (abs(snoise(dir * 100, 20, 1.4))) * 0.05;
	//height = distToEdge * 0.5;
	//height += 0.001;
	//height += slope * 0.001;

	//DEBUG
	//height = uv.x;
	//height = slope;

	//SAFE
	height = clamp(height, 0, 1);
	_chunkHeightMapNew[id.xy] = height;
}